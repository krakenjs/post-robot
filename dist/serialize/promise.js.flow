/**
 * Flowtype definitions for promise
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.14.1
 * @flow
 */

import type { CrossDomainWindowType, DomainMatcher } from "cross-domain-utils";
import { ZalgoPromise } from "zalgo-promise";
import type { CustomSerializedType, Thenable } from "universal-serialize";
import { SERIALIZATION_TYPE } from "../conf";
import type { OnType, SendType } from "../types";
import type { SerializedFunction } from "./function";
import { ProxyWindow } from "./window";
export type SerializedPromise = CustomSerializedType<
  typeof SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE,
  {
    then: SerializedFunction,
    ...
  }
>;
declare export function serializePromise(
  destination: CrossDomainWindowType | ProxyWindow,
  domain: DomainMatcher,
  val: Thenable,
  key: string,
  x: {
    on: OnType,
    send: SendType,
    ...
  }
): SerializedPromise;
declare export function deserializePromise<T>(
  source: CrossDomainWindowType | ProxyWindow,
  origin: string,
  x: {
    then: (...args: Array<any>) => any,
    ...
  }
): ZalgoPromise<T>;
