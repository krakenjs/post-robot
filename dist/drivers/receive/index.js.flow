/**
 * Flowtype definitions for index
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.14.1
 * @flow
 */

import type { CrossDomainWindowType } from "cross-domain-utils";
import type {
  OnType,
  SendType,
  MessageEvent,
  CancelableType,
} from "../../types";
declare export function receiveMessage(
  event: MessageEvent,
  x: {
    on: OnType,
    send: SendType,
    ...
  }
): void;
declare export function setupGlobalReceiveMessage(x: {
  on: OnType,
  send: SendType,
  ...
}): void;
declare type ListenerEvent = {
  source: CrossDomainWindowType,
  origin: string,
  data: string,
  sourceElement: CrossDomainWindowType,
  originalEvent?: {
    origin: string,
    ...
  },
  ...
};
declare export function messageListener(
  event: ListenerEvent,
  x: {
    on: OnType,
    send: SendType,
    ...
  }
): void;
declare export function listenForMessages(x: {
  on: OnType,
  send: SendType,
  ...
}): CancelableType;
declare export function stopListenForMessages(): void;
declare export {};
