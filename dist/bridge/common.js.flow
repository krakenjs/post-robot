/**
 * Flowtype definitions for common
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.14.1
 * @flow
 */

import { ZalgoPromise } from "zalgo-promise";
import type { CrossDomainWindowType } from "cross-domain-utils";
declare export function needsBridgeForBrowser(): boolean;
declare export function needsBridgeForWin(win: CrossDomainWindowType): boolean;
declare export function needsBridgeForDomain(
  domain: string | null | void,
  win: CrossDomainWindowType | null | void
): boolean;
declare export function needsBridge(x: {
  win?: CrossDomainWindowType,
  domain?: string,
  ...
}): boolean;
declare export function getBridgeName(domain: string): string;
declare export function isBridge(): boolean;
declare export var documentBodyReady: ZalgoPromise<
  HTMLBodyElement | HTMLElement
>;
declare export function registerRemoteWindow(win: CrossDomainWindowType): void;
declare export function findRemoteWindow(
  win: CrossDomainWindowType
): ZalgoPromise<
  (
    remoteWin: CrossDomainWindowType,
    message: string,
    remoteDomain: string
  ) => void
>;
declare type SendMessageType = {
  (arg0: string): void,
  fireAndForget: (arg0: string) => void,
  ...
};
declare export function registerRemoteSendMessage(
  win: CrossDomainWindowType,
  domain: string,
  sendMessage: SendMessageType
): void;
declare export function rejectRemoteSendMessage(
  win: CrossDomainWindowType,
  err: Error
): void;
declare export function sendBridgeMessage(
  win: CrossDomainWindowType,
  domain: string,
  message: string
): ZalgoPromise<void>;
declare export {};
